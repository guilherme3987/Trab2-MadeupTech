$ git log --format='%aN' | sort -u | tee users.txt #criando arquivo txt com users
$ git log --pretty=format:"%ae" | sort | uniq  | tee email_users.txt #criando arquivo txt com emails dos email_users
$ git log --format="%aD" | tail -1 | tee data_repo.txt #Idade do repositório
$ git log --pretty=format: --name-only | sort | uniq -c | sort -nr | head -10 | tee file  #Arquivos mais ativos do diretório
$ git log --pretty=format: --name-only --no-merges | sort | uniq -c | sort -nr | head -20 | tee files-churn.txt
$ git log --pretty=format:"%h - %an, %ad : %s" --since="12 months ago" | tee commits_data.txt #Lista todos commits por data
$ git rev-list --count HEAD --since="12 months ago" | tee num_commits.txt
$ git log -1 --format=%cd | tee last_commit.txt
$ git tag --sort=-v:refname | tee version_releases.txt

#exibe o histórico de commits relacionados a tags, de forma simplificada, mostrando apenas as informações de data e o que está decorado (como tags e branches)
$ git log --tags --simplify-by-decoration --pretty="format:%ci %d" | tee commits_tag.txt

#Usando o GitHub CLI
$ gh issue list --state closed #issues resolvidas
$ gh issue list --state open #open issues

#Testes feitos
$ git log --grep="test\|ci\|pipeline\|unittest\|integration\|spec\|fix\|build\|deploy\|refactor\|coverage\|TDD" | tee testes.txt
